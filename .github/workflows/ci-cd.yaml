name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch: # For manual deploy
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build Docker image
        id: set-image
        run: |
          IMAGE=rahsnh/hello-world:${GITHUB_SHA::7}
          docker build -t $IMAGE .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "::set-output name=image::$IMAGE"

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push $IMAGE

      - name: Update deployment.yaml with new image
        run: |
          sed -i "s|image: .*|image: $IMAGE|g" manifests/deployment.yaml

      - name: Commit & push updated deployment.yaml
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add manifests/deployment.yaml
          git commit -m "Update image to $IMAGE"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'workflow_dispatch' # only run on manual trigger
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ArgoCD Sync
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        run: |
          argocd app sync hello-world \
            --server $ARGOCD_SERVER \
            --auth-token $ARGOCD_AUTH_TOKEN
